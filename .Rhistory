install.packages("highr")
library(devtools)
devtools::install_github("rstudio/rmarkdown")
install.packages("AER")
install.packages("lmtest")
installed.packages()
install.packages("Rcpp")
detach("rcpp")
detach(rcpp)
library("Rcpp", lib.loc="\\\\Wiwinf-file01/Home/alexander.gerber/Eigene Dateien/R/R-3.3.0/library")
detach("package:Rcpp", unload=TRUE)
library("Rcpp", lib.loc="\\\\Wiwinf-file01/Home/alexander.gerber/Eigene Dateien/R/R-3.3.0/library")
detach("package:Rcpp", unload=TRUE)
install.packages("Rcpp")
path.package()
linPaths()
libPaths()
.libPaths()
install.packages("car")
install.packages("car")
.libPaths
.libPaths()
library(devtools)
install_github("datacamp/tutorial")
install.packages("AER" ,lib = "C:/Users/Alexander.Gerber/Dropbox/R/Library")
.libPaths()
dropbox <- "C:/Users/Alexander.Gerber/Dropbox/R/Library"
.libPaths(c(.libPaths(), dropbox))
.libPaths()
library(devtools)
install_github("datacamp/tutorial", lib = dropbox)
.libPaths()
a <- .libPaths()
a
.libPaths(dropbox)
install_github("datacamp/tutorial", lib = dropbox)
.libPaths()
dropbox
.libPaths(dropbox)
.libPaths()
with_libpaths(dropbox, install_github("datacamp/tutorial"))
with_libpaths(new = dropbox, install_github("datacamp/tutorial"))
with_libpaths(new = dropbox, install_github("datacamp/tutorial"))
withr::with_libpaths(new = dropbox, install_github("datacamp/tutorial"))
install_github("datacamp/tutorial")
.libPaths() <- "C:/Users/Alexander.Gerber/Dropbox/R/Library"
.libPaths()
.libPaths()[1]
.libPaths()[2] <- NULL
.libPaths()[2]
.libPaths()[2] <- 1
.libPaths(NULL)[2]
.libPaths()[2]
.libPaths(dropbox)
.libPaths
.libPaths()
withr::with_libpaths(new = dropbox, install_github("datacamp/tutorial"))
withr::with_libpaths(new = dropbox, install_github("datacamp/tutorial"))
.libPaths()
dropbox <- "C:/Users/Alexander.Gerber/Dropbox/R/Library"
.libPaths(c(.libPaths(), dropbox))
.libPaths()
.libPaths(dropbox)
.libPaths()
install.packages("AER")
install.packages("devtools")
library(devtools)
install_github("datacamp/tutorial")
install_github("datacamp/tutorial")
install.packages("curl")
library(devtools)
install_github("datacamp/tutorial")
install.packages("curl")
install_github("datacamp/tutorial")
install.packages("curl")
install.packages("C:/Users/OEK-admin/AppData/Local/Temp/RtmpshJGJJ/downloaded_packages/curl_0.9.7.zip", repos = NULL, type = "win.binary")
library(devtools)
install_github("datacamp/tutorial")
data.frame(TestScore = c(680, 640, 670, 660, 630, 660, 635), Student-teacher-ratio = c(15, 17, 19, 20, 22, 23,5, 25) )
Student-teacher-ratio = c(15, 17, 19, 20, 22, 23,5, 25)
data.frame(TestScore = c(680, 640, 670, 660, 630, 660, 635), StudentTeacherRatio = c(15, 17, 19, 20, 22, 23,5, 25) )
Raito_Score <- data.frame(TestScore = c(680, 640, 670, 660, 630, 660, 635), StudentTeacherRatio = c(15, 17, 19, 20, 22, 23.5, 25))
Raito_Score <- data.frame(TestScore = c(680, 640, 670, 660, 630, 660, 635), StudentTeacherRatio = c(15, 17, 19, 20, 22, 23.5, 25))
plot(TestScore ~ StuentTeacherRatio, data = Ratio_Score)
Ratio_Score
Raito_Score
Raito_Score
Raito_Score
Raito_Score
plot(TestScore ~ StuentTeacherRatio, data = Raito_Score)
plot(TestScore ~ StudentTeacherRatio, data = Raito_Score)
plot(TestScore ~ StudentTeacherRatio, data = Raito_Score, xlim = c(600, 700))
plot(TestScore ~ StudentTeacherRatio, data = Raito_Score, ylim = c(600, 700))
plot(TestScore ~ StudentTeacherRatio, data = Raito_Score, ylim = c(600, 700), xlim = c(10,30))
lm(TestScore ~ StudentTeacherRatio, data = Raito_Score)
lm_model <- lm(TestScore ~ StudentTeacherRatio, data = Raito_Score)
abline(lm_model)
