abline(a=coef(fit1),b=0, col="blue")
abline(a=coef(fit2),b=0, col="red")
points(y2 ~ x, pch= 18, col="red")
points(y2 ~ x, pch= 17, col="red")
plot(y1 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
points(y2 ~ x, pch= 17, col="red")
points(y2 ~ x, pch= 18, col="red")
abline(a=coef(fit1),b=0, col="blue")
abline(a=coef(fit2),b=0, col="red")
plot(y1 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
points(y2 ~ x, pch= 18, col="red")
plot(y1 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
points(y2 ~ x, pch= 1, col="red")
fit2              <- lm(y2 ~ 1 + z)
fit2
x     <- round(runif(25,10,20),0)
x
x     <- round(runif(25,10,20),0)
z     <- round(rnorm(25, 0, 1) + 0.5 * x, 0)
y1    <- x + rnorm(25)
y2     <- x + z + rnorm(25)
fit1              <- lm(y1 ~ 1)
fit2              <- lm(y2 ~ 1 + z)
plot(y1 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
points(y2 ~ x, pch= 1, col="red")
abline(a=coef(fit1),b=0, col="blue")
abline(a=coef(fit2),b=0, col="red")
abline(coef(fit2), col="red")
plot(y1 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
fit1              <- lm(y1 ~ x)
fit1
abline(a=coef(fit1),b=0, col="blue")
abline(a=coef(fit1), col="blue")
points(y2 ~ x, pch= 1, col="red")
abline(coef(fit2), col="red")
fit2              <- lm(y2 ~ x)
abline(coef(fit2), col="red")
plot(y1 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
points(y2 ~ x, pch= 1, col="red")
abline(a=coef(fit1), col="blue")
abline(coef(fit2), col="red")
x     <- round(runif(25,10,20),0)
z     <- round(rnorm(25, 0, 1) + 0.5 * x, 0)
y1    <- x + rnorm(25)
y2     <- x + z + rnorm(25)
fit1              <- lm(y1 ~ x)
fit2              <- lm(y2 ~ x)
plot(y1 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
points(y2 ~ x, pch= 1, col="red")
abline(a=coef(fit1), col="blue")
abline(coef(fit2), col="red")
fit3 <- lm(y3 ~ x +z)
fit3 <- lm(y2 ~ x +z)
fit3
abline(coef(fit2)[1:2], col="green")
fit2 <- lm(y2 ~ x)
fit3 <- lm(y2 ~ x +z)
plot(y1 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
points(y2 ~ x, pch= 1, col="red")
abline(coef(fit2), col="red")
abline(coef(fit3)[1:2], col="green")
plot(y2 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
abline(a=coef(fit1), col="blue")
abline(coef(fit2), col="red")
x <- rnorm(100, 5, 1)
plot(x)
plot(x, type='l')
y <- x - mean(x)
plot(y, type='l')
arima(y, order = c(1,0,0))
plot(y2 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
set.seed(123)
x     <- round(runif(25,10,20),0)
z     <- round(rnorm(25, 0, 1) + 0.5 * x, 0)
y1    <- x + rnorm(25)
y2     <- x + z + rnorm(25)
fit2 <- lm(y2 ~ x)
fit3 <- lm(y2 ~ x + z)
plot(y2 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
abline(a=coef(fit1), col="blue")
plot(y2 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
abline(coef(fit2), col="red")
abline(coef(fit3)[1:2], col="green")
z2     <- round(rnorm(25, 0, 1) + 0 * x, 0)
y3     <- x + z + rnorm(25)
fit4 <- lm(y2 ~ x + z)
fit4 <- lm(y2 ~ x + z2)
abline(coef(fit4)[1:2], col="yellow")
v <- input_slider(-1, 1, value = 0, step = 20, animate = TRUE)
z <- function(z, v) z + v * x
plot(y2 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
df <- data.frame(y2 = y2, x = x, z=z)
newZ <- function(z, v) z + v * x
z     <- round(rnorm(25, 0, 1) + 0.5 * x, 0)
z     <- round(rnorm(25, 0, 1) + 0 * x, 0)
z2     <- round(rnorm(25, 0, 1) + 0 * x, 0)
newZ <- function(z, v) z + v * x
df <- data.frame(y2 = y2, x = x, z=z)
mutate(y = newZ(y, eval(v))) %>%
layer_points() %>%
layer_model_predictions(model  = "lm", formula = y ~ x)
layer_model_predictions(model  = "lm", formula = y2 ~ x)
df %>%
ggvis(x = ~x, y = ~y2)  %>%
mutate(y = newZ(y, eval(v))) %>%
layer_points() %>%
layer_model_predictions(model  = "lm", formula = y2 ~ x)
v <- input_slider(-1, 1, value = 0, step = 20, animate = TRUE)
newZ <- function(z, v) z + v * x
df <- data.frame(y2 = y2, x = x, z=z)
df %>%
ggvis(x = ~x, y = ~y2)  %>%
mutate(y = newZ(y, eval(v))) %>%
layer_points() %>%
layer_model_predictions(model  = "lm", formula = y2 ~ x)
plot(y2 ~ x, pch=19, col="blue", ylim=c(min(y1), max(y2)))
abline(coef(fit2), col="red")
abline(coef(fit3)[1:2], col="green")
abline(coef(fit4)[1:2], col="yellow")
df %>%
ggvis(x = ~x, y = ~y2)  %>%
mutate(z = newZ(y, eval(v))) %>%
layer_points() %>%
layer_model_predictions(model  = "lm", formula = y2 ~ x + z)
newZ <- function(z, v) z + v * x
fit2 <- lm(y2 ~ x)
fit3 <- lm(y2 ~ x + z)
fit4 <- lm(y2 ~ x + z2)
df <- data.frame(y2 = y2, x = x, z=z)
plot(x)df
df
df %>%
ggvis(x = ~x, y = ~y2)  %>%
mutate(z = newZ(z, eval(v))) %>%
layer_points() %>%
layer_model_predictions(model  = "lm", formula = y2 ~ x + z)
df %>%
ggvis(x = ~x, y = ~y2)  %>%
mutate(z = newZ(z, eval(v))) %>%
layer_points()# %>%
df %>%
ggvis(x = ~x, y = ~y2)  %>%
mutate(z = newZ(z, eval(v))) %>%
layer_points() %>%
layer_model_predictions(model  = "lm", formula = y2 ~ x)
df %>%
ggvis(x = ~x, y = ~y2)  %>%
mutate(z = newZ(z, eval(v))) %>%
layer_points() %>%
layer_model_predictions(model  = "lm", formula = y2 ~ x) %>%
layer_model_predictions(model  = "lm", formula = y2 ~ x + z)
df %>%
ggvis(x = ~x, y = ~y2)  %>%
mutate(z = newZ(z, eval(v))) %>%
layer_points() %>%
layer_model_predictions(model  = "lm", formula = y2 ~ x) %>%
layer_paths("x" = x, "y" = fitted(lm(y2 ~ x + z))
)
df %>%
ggvis(x = ~x, y = ~y2)  %>%
mutate(z = newZ(z, eval(v))) %>%
layer_points() %>%
layer_model_predictions(model  = "lm", formula = y2 ~ x) %>%
layer_paths("x" = x, "y" = fitted(lm(y2 ~ x + z)))
layer_paths(property="x", x= x, "y" = fitted(lm(y2 ~ x + z)))
layer_paths(prop(property="x", x=x), prop(property = "y", x = fitted(lm(y2 ~ x + z))))
df %>%
ggvis(x = ~x, y = ~y2)  %>%
mutate(z = newZ(z, eval(v))) %>%
layer_points() %>%
layer_model_predictions(model  = "lm", formula = y2 ~ x) %>%
layer_paths(prop(property="x", x=x), prop(property = "y", x = fitted(lm(y2 ~ x + z))))
layer_paths(prop(property ="x", x=x), prop(property = "y", x = fitted(lm(y2 ~ x + z))))
df %>%
ggvis(x = ~x, y = ~y2)  %>%
mutate(z = newZ(z, eval(v))) %>%
layer_points() %>%
layer_model_predictions(model  = "lm", formula = y2 ~ x) %>%
layer_paths(prop(property ="x", x=x), prop(property = "y", x = fitted(lm(y2 ~ x + z))))
mtcars
lm(mtcars$mpg ~mtcars$wt)
plot(mtcars$mpg, mtcars$wt)
plot(mtcars$mpg, x=mtcars$wt)
plot(y=mtcars$mpg, x=mtcars$wt)
plot(y=mtcars$mpg, x=mtcars$cyl)
plot(y=mtcars$mpg, x=mtcars$disp)
plot(y=mtcars$mpg, x=mtcars$hp)
??datasets
?dataset
??dataset
library(help = "datasets")
Orange
PlantGrowth
airquality
x <- runif(100, 10, 50)
x
y <- x + x/10 * rnorm(100)
lm(y~x)
plot(y=y,x=x)
abline(coef(lm(y~x)))
y <- x + rnorm(100, 0,  x/10)
plot(y=y,x=x)
abline(coef(lm(y~x)))
x2 <- rnorm(100) * x
y <- x + x2 + rnorm(100)
plot(y=y,x=x)
abline(coef(lm(y~x)))
fir1 <- lm(y~x)
plot(y=y,x=x)
abline(coef(fit1))
qqnorm(fit1$residuals)
qqline(fit1$residuals)
y <- x + x2 + rnorm(100)
fit1 <- lm(y~x)
plot(y=y,x=x)
abline(coef(fit1))
qqnorm(fit1$residuals)
qqline(fit1$residuals)
fit2 <- lm(y~x + x2)
plot(y=y,x=x)
abline(coef(fit1))
qqnorm(fit1$residuals)
qqline(fit1$residuals)
fit1 <- lm(y~x)
fit2 <- lm(y~x + x2)
par(mfrow=c(1,2))
plot(y=y,x=x)
abline(coef(fit1))
qqnorm(fit1$residuals)
qqline(fit1$residuals)
qqnorm(fit1$residuals)
qqline(fit1$residuals)
qqnorm(fit2$residuals)
qqline(fit2$residuals)
x2 <- rnorm(100, 0 , 5) * x
y <- x + x2 + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~x + x2)
par(mfrow=c(1,2))
plot(y=y,x=x)
abline(coef(fit1))
qqnorm(fit1$residuals)
qqline(fit1$residuals)
qqnorm(fit2$residuals)
qqline(fit2$residuals)
qqnorm(fit1$residuals)
qqline(fit1$residuals)
qqnorm(fit1$residuals)
qqline(fit1$residuals)
qqnorm(fit2$residuals)
qqline(fit2$residuals)
CASchools
CASchools
?CASchools
??CASchools
library(AER)
attach(CASchools)
names(CASchools)
CASchools$PctES    <- 100 - CASchools$english
model2 <- lm(score ~ tsratio + PctES)
qqplot(model1)
model1 <- lm(score ~ tsratio)
model2 <- lm(score ~ tsratio + PctES)
qqplot(model1)
model1 <- lm(score ~ tsratio)
model1
model2 <- lm(score ~ tsratio + PctES)
qqplot(model1)
qqnorm(model1)
qqnorm(model1)
model1 <- lm(score ~ tsratio)
model2 <- lm(score ~ tsratio + PctES)
qqnorm(model1)
qqnorm(model1$residuals)
qqline(model1$residuals)
qqnorm(model2$residuals)
qqline(model2$residuals)
x <- runif(100, 0, 100)
x
runif(1, -1, 1)
runif(1, -1, 1)
runif(1, -1, 1)
runif(1, -1, 1)
runif(1, -1, 1)
runif(1, -1, 1)
runif(1, -1, 1)
runif(1, -1, 1)
runif(1, -1, 1)
runif(1, -1, 1)
x <- runif(1, -1, 1) * z
corr(x,z)
cor(x,z)
cor(x,z)
x <- runif(1, -1, 1) * z
cor(x,z)
x <- runif(1, -1, 1) * z + rnorm(100)
cor(x,z)
x
z
z <- runif(100, 0, 100)
x <- runif(1, -1, 1) * z + rnorm(100)
cor(x,z)
x <- runif(1, -1, 1) * z + rnorm(100)
cor(x,z)
x <- runif(1, -1, 1) * z + rnorm(100)
cor(x,z)
x <- runif(1, -1, 1) * z + rnorm(100)
cor(x,z)
x <- runif(1, -1, 1) * z + rnorm(100)
cor(x,z)
x <- runif(1, -1, 1) * z + rnorm(100)
cor(x,z)
x <- runif(1, -1, 1) * z + rnorm(100)
cor(x,z)
x <- runif(100, -1, 1) * z + rnorm(100)
cor(x,z)
x <- runif(100, -1, 1) * z
cor(x,z)
x <- (runif(1, -1, 1) + rnorm(100)) * z
cor(x,z)
x <- (runif(1, -1, 1) + rnorm(100)) * z
cor(x,z)
x <- (runif(1, -1, 1) + rnorm(100)) * z
cor(x,z)
x <- (runif(1, -1, 1) + rnorm(100)) * z
cor(x,z)
x <- (runif(1, -1, 1) + rnorm(100)) * z
cor(x,z)
x <- (runif(1, -1, 1) + rnorm(100)) * z
cor(x,z)
x <- (runif(1, -1, 1) + rnorm(100)) * z
cor(x,z)
fit1 <- lm(y~x)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
x <- (0.5 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
par(mfrow=c(1,1))
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- (0.5 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- (0.5 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- (0.5 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- (0.5 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- (0.5 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- (0.5 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- (0 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- (0 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- (0 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- (0 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- (0 + rnorm(100)) * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- 0 * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- 1 * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
z <- runif(100, 0, 100)
x <- 0.5 * z
cor(x,z)
y <- x + z + rnorm(100)
fit1 <- lm(y~x)
fit2 <- lm(y~ x + z)
fit1
fit2
plot(y=y,x=x)
abline(coef(fit1))
abline(coef(fit2)[1:2])
library(AER)                                                    # contains the dataset
data(CASchools)
CASchools$tsratio  <- CASchools$students/CASchools$teachers     # teacher-student-ratio
CASchools$score    <- (CASchools$read + CASchools$math)/2       # average test-score
model <- lm(score ~ tsratio + english, data = CASchools)
summary(model)
CASchools
names(CASchools)
